% Generated by MATLAB(R) 24.2 (R2024b) and LTE Toolbox 24.2 (R2024b).
% matlab -nodisplay -nodesktop -nosplash -r "run('LTE_RFF_Uplink_RMC_new.m');exit;"

%% Generating Uplink RMC waveform
fprintf('Uplink RMC configuration\n');
cfg = struct('RC', 'A1-1', ...
    'NULRB', 100, ...
    'DuplexMode', 'FDD', ...
    'NCellID', 0, ...
    'RNTI', 1, ...
    'TotSubframes', 10, ...
    'Windowing', 0);

cfg.PUSCH.RVSeq = [0 2 3 1];
cfg = lteRMCUL(cfg);

fprintf('Input bit source\n');
in = [1; 0; 0; 1];

fprintf('Generation\n');
[waveform, grid, cfg] = lteRMCULTool(cfg, in);


fprintf('Specify the sample rate of the waveform in Hz\n');
Fs = cfg.SamplingRate;

%{

%       ----- OR -----

fprintf('Specify the sample rate of the waveform in Hz
Fs = 1000



%% ADD RF Fingerprint here
randAmp = rand(1);
randPhase = pi / rand(1);

waveform = randAmp * waveform .* exp(1j*randPhase)

%        ----- OR -----

function add_fingerprint = add_RF_fingerprint(signal, fs, fingerprint_strength)
    % Signal: Original signal sine wave
    % fs: Sample frequency
    % fingerprint_strength: controls strength of fingerprint, how easy it is to spot

    % Create a unique fingerprint patter
    numberOfSamples = length(signal);
    time = (0:numberOfSamples-1) / fs;

    % Add a phase shift to simulate a fingerprint
    phase_shift = 2*pi*rand();
    phase_modulation = fingerprint_strength * cos(2 * pi * 0.5 * time + phase_shift);

    %Frequency shift to simulate subltle RF variations
    freq_modulation = fingerprint_strength * cos(2 * pi * 0.2 * time);

    % Apply fingerprint to signal
    fingerprinted_signal = signal .* cos(phase_modulation + freq_modulation);

    %Normalize
    fingerprinted_signal = fingerprinted_signal / max(abs(fingerprinted_signal));
end

fingerprint_strength = 0.1;


waveform = add_RF_fingerprint(waveform, Fs, fingerprint_strength)

%}



%% Impairments
fprintf('IQ imbalance\n');
waveform = iqimbal(waveform, 8, (180/pi)*pi/5);

fprintf('Phase noise\n');
phaseNoise = comm.PhaseNoise('FrequencyOffset', [6144000 12288000], ...
    'Level', [-60 -80], ...
    'SampleRate', Fs);
waveform = phaseNoise(waveform);

fprintf('DC offset\n');
waveform = waveform + 0.1 + 0.2i;

fprintf('AWGN\n');
waveform = awgn(waveform, 20, 'measured');
waveform

fprintf('Exporting\n');
fid = fopen('LTE_RFF_Uplink_RMC_waveform_data.ascii', 'w');
fprintf(fid, '%.4f + %.4fi\n', [real(waveform(:)), imag(waveform(:))].');
fclose(fid);

fprintf('Done\n');
